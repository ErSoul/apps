From: Lukáš Tinkl <lukas@kde.org>
Date: Fri, 09 Jan 2015 02:46:22 +0000
Subject: use KPluginLoader::findPlugin(libName) to find our kcminit library plugin
X-Git-Url: http://quickgit.kde.org/?p=plasma-workspace.git&a=commitdiff&h=fe9b3d8998488498efc6d33bc1783d1c6fa5fb85
---
use KPluginLoader::findPlugin(libName) to find our kcminit library plugin

fixes GTK styles (among others) not being applied on Plasma startup
---


--- a/startkde/kcminit/main.cpp
+++ b/startkde/kcminit/main.cpp
@@ -28,19 +28,17 @@
 #include <QFile>
 #include <QTimer>
 #include <QLibrary>
+#include <QtDBus/QtDBus>
+#include <QDebug>
 
 #include <kapplication.h>
 #include <kcmdlineargs.h>
 #include <k4aboutdata.h>
 #include <kservice.h>
-#include <kdebug.h>
 #include <kconfig.h>
 #include <kconfiggroup.h>
-#include <klocale.h>
-#include <QtDBus/QtDBus>
-
+#include <klocalizedstring.h>
 #include <kservicetypetrader.h>
-// #include <kdefakes.h>
 
 static int ready[ 2 ];
 static bool startup = false;
@@ -65,31 +63,26 @@
 
 bool KCMInit::runModule(const QString &libName, KService::Ptr service)
 {
-    QLibrary lib(libName);
-    if (lib.load()) {
-        const QVariant tmp = service->property("X-KDE-Init-Symbol", QVariant::String);
-        QString kcminit;
-        if( tmp.isValid() )
-        {
-            kcminit = tmp.toString();
-            if( !kcminit.startsWith( QLatin1String( "kcminit_" ) ) )
-                kcminit = "kcminit_" + kcminit;
-        }
-        else
-            kcminit = "kcminit_" + libName;
-
-        // get the kcminit_ function
-        QFunctionPointer init = lib.resolve(kcminit.toUtf8().constData());
-        if (init) {
-            // initialize the module
-            kDebug(1208) << "Initializing " << libName << ": " << kcminit;
-
-            void (*func)() = (void(*)())init;
-            func();
-            return true;
-        } else {
-            kDebug(1208) << "Module" << libName << "does not actually have a kcminit function";
-        }
+    const QVariant tmp = service->property("X-KDE-Init-Symbol", QVariant::String);
+    QString kcminit;
+    if( tmp.isValid() )
+    {
+        kcminit = tmp.toString();
+        if( !kcminit.startsWith( QLatin1String( "kcminit_" ) ) )
+            kcminit = "kcminit_" + kcminit;
+    }
+    else
+        kcminit = "kcminit_" + libName;
+
+    // get the kcminit_ function
+    QFunctionPointer init = QLibrary::resolve(KPluginLoader::findPlugin(libName), kcminit.toUtf8().constData());
+    if (init) {
+        // initialize the module
+        qDebug() << "Initializing " << libName << ": " << kcminit;
+        init();
+        return true;
+    } else {
+        qWarning() << "Module" << libName << "was not found or does not actually have a kcminit function";
     }
     return false;
 }
@@ -117,6 +110,7 @@
 
       // see ksmserver's README for the description of the phases
       const QVariant vphase = service->property("X-KDE-Init-Phase", QVariant::Int );
+
       int libphase = 1;
       if( vphase.isValid() )
           libphase = vphase.toInt();
@@ -157,7 +151,7 @@
 
     KService::Ptr serv = KService::serviceByStorageId( module );
     if ( !serv || serv->library().isEmpty() ) {
-      kError(1208) << i18n("Module %1 not found", module) << endl;
+      qCritical() << i18n("Module %1 not found", module);
       return;
     } else {
       list.append(serv);
