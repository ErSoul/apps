From: David Rosca <nowrep@gmail.com>
Date: Sun, 17 Jan 2016 16:53:53 +0000
Subject: Ignore check if just one part of size is zero in compactRepresentationCheck
X-Git-Url: http://quickgit.kde.org/?p=plasma-framework.git&a=commitdiff&h=11937533e83659dc4dab6f7e8e6019863a28ddae
---
Ignore check if just one part of size is zero in compactRepresentationCheck

When debugging the linked bug, it looks like when item's geometry change
eg. from 0x0 to 100x100, geometryChanged may be called twice, first with 100x0
and then finally with 100x100.
This was not issue before, because we used timer to call compactRepresentationCheck.
This changes compactRepresentationCheck so that it early returns also when just
one part of item's size is zero.

Fixes regression from 344dbeb938

REVIEW: 126778
BUG: 358039
---


--- a/src/plasmaquick/appletquickitem.cpp
+++ b/src/plasmaquick/appletquickitem.cpp
@@ -255,8 +255,8 @@
         return;
     }
 
-    //ignore 0,0 sizes;
-    if (q->width() <= 0 && q->height() <= 0) {
+    //ignore 0 sizes;
+    if (q->width() <= 0 || q->height() <= 0) {
         return;
     }
 
From: David Rosca <nowrep@gmail.com>
Date: Thu, 21 Jan 2016 14:35:19 +0000
Subject: AppletQuickItem: Don't try to set initial size bigger than parent size
X-Git-Url: http://quickgit.kde.org/?p=plasma-framework.git&a=commitdiff&h=f688c904a81c72d077580ab942b874f398fbd7d4
---
AppletQuickItem: Don't try to set initial size bigger than parent size

Trying to set initial size bigger than parent size only results
to item being resized down to fit in parent later.

REVIEW: 126822
BUG: 358200
---


--- a/src/plasmaquick/appletquickitem.cpp
+++ b/src/plasmaquick/appletquickitem.cpp
@@ -535,16 +535,20 @@
     QVariantHash initialProperties;
     //initialize with our size only if valid
     if (width() > 0 && height() > 0) {
-        initialProperties[QStringLiteral("width")] = width();
-        initialProperties[QStringLiteral("height")] = height();
+        const qreal w = parentItem() ? std::min(parentItem()->width(), width()) : width();
+        const qreal h = parentItem() ? std::min(parentItem()->height(), height()) : height();
+        initialProperties[QStringLiteral("width")] = w;
+        initialProperties[QStringLiteral("height")] = h;
     }
     d->qmlObject->setInitializationDelayed(false);
     d->qmlObject->completeInitialization(initialProperties);
 
     //otherwise, initialize our size to root object's size
     if (d->qmlObject->rootObject() && (width() <= 0 || height() <= 0)) {
-        setWidth(d->qmlObject->rootObject()->property("width").value<qreal>());
-        setHeight(d->qmlObject->rootObject()->property("height").value<qreal>());
+        const qreal w = d->qmlObject->rootObject()->property("width").value<qreal>();
+        const qreal h = d->qmlObject->rootObject()->property("height").value<qreal>();
+        setWidth(parentItem() ? std::min(parentItem()->width(), w) : w);
+        setHeight(parentItem() ? std::min(parentItem()->height(), h) : h);
     }
 
     //default fullrepresentation is our root main component, if none specified
