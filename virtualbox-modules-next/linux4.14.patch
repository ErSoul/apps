--- a/vboxnetflt/linux/VBoxNetFlt-linux.c	2017-10-18 09:12:45.000000000 +0200
+++ b/vboxnetflt/linux/VBoxNetFlt-linux.c	2017-11-13 11:39:13.752215042 +0100
@@ -139,6 +139,10 @@
 #  define bstats stats
 #  define qstats stats
 # endif
+#endif 
+
+# if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 14, 0)
+#define SKB_GSO_UDP	0
 #endif
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 20, 0)
@@ -737,9 +741,11 @@
         case PDMNETWORKGSOTYPE_IPV4_TCP:
             fGsoType = SKB_GSO_TCPV4;
             break;
+# if LINUX_VERSION_CODE < KERNEL_VERSION(4, 14, 0)
         case PDMNETWORKGSOTYPE_IPV4_UDP:
             fGsoType = SKB_GSO_UDP;
             break;
+#endif
         case PDMNETWORKGSOTYPE_IPV6_TCP:
             fGsoType = SKB_GSO_TCPV6;
             break;
--- a/vboxpci/linux/VBoxPci-linux.c	2017-10-18 09:12:46.000000000 +0200
+++ b/vboxpci/linux/VBoxPci-linux.c	2017-11-13 11:39:13.501215050 +0100
@@ -353,12 +353,17 @@
 static int vboxPciFileWrite(struct file* file, unsigned long long offset, unsigned char* data, unsigned int size)
 {
     int          ret;
+# if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 14, 0)
+
+    ret = kernel_write(file, data, size, &offset);
+#else
     mm_segment_t fs_save;
 
     fs_save = get_fs();
     set_fs(get_ds());
     ret = vfs_write(file, data, size, &offset);
     set_fs(fs_save);
+#endif
     if (ret < 0)
         printk(KERN_DEBUG "vboxPciFileWrite: error %d\n", ret);
 
