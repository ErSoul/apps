diff --git a/shared/collectionscanner/ScanningState.cpp b/shared/collectionscanner/ScanningState.cpp
index 488b5ec..c373ffc 100644
--- a/shared/collectionscanner/ScanningState.cpp
+++ b/shared/collectionscanner/ScanningState.cpp
@@ -20,6 +20,7 @@
 #include "ScanningState.h"
 
 #include <QBuffer>
+#include <QDataStream>
 #include <QtDebug>
 
 #ifdef Q_CC_MSVC
diff --git a/src/context/applets/wikipedia/WikipediaApplet.cpp b/src/context/applets/wikipedia/WikipediaApplet.cpp
index 824e9b7..d635f61 100644
--- a/src/context/applets/wikipedia/WikipediaApplet.cpp
+++ b/src/context/applets/wikipedia/WikipediaApplet.cpp
@@ -19,7 +19,7 @@
 
 #include "WikipediaApplet.h"
 #include "WikipediaApplet_p.h"
-#include "WikipediaApplet_p.moc"
+#include "moc_WikipediaApplet_p.cpp"
 
 #include "App.h"
 #include "core/support/Amarok.h"
diff --git a/src/context/tools/CMakeLists.txt b/src/context/tools/CMakeLists.txt
index 1deb7f3..fc9a6ee 100644
--- a/src/context/tools/CMakeLists.txt
+++ b/src/context/tools/CMakeLists.txt
@@ -4,7 +4,13 @@ set(amarokpkg_SRCS
 
 add_executable(amarokpkg ${amarokpkg_SRCS})
 
-target_link_libraries(amarokpkg  KF5::Plasma)
+target_link_libraries(amarokpkg KF5::I18n
+                                KF5::Plasma
+                                KF5::Service
+                                Qt5::DBus
+                                Qt5::Core
+                                Qt5::Widgets
+                     )
 
 install(TARGETS amarokpkg ${INSTALL_TARGETS_DEFAULT_ARGS})
 
diff --git a/src/context/tools/amarokpkg.cpp b/src/context/tools/amarokpkg.cpp
index 2ae1e93..98a9295 100644
--- a/src/context/tools/amarokpkg.cpp
+++ b/src/context/tools/amarokpkg.cpp
@@ -17,27 +17,28 @@
 
 #include <iostream>
 
-#include <QDir>
+#include <QApplication>
+#include <QAction>
+#include <QCommandLineParser>
 #include <QDBusInterface>
+#include <QDir>
+#include <QLocale>
+#include <QTextStream>
 
-#include <KApplication>
-#include <K4AboutData>
-#include <QAction>
-#include <KCmdLineArgs>
-#include <KLocale>
+#include <KAboutData>
+#include <klocalizedstring.h>
 #include <KService>
 #include <KServiceTypeTrader>
 #include <KShell>
-#include <KStandardDirs>
+#include <QStandardPaths>
 #include <KProcess>
 #include <KSycoca>
 #include <KConfigGroup>
+#include <KPackage/Package>
+#include <KPluginInfo>
 
-#include <Plasma/PackageStructure>
-#include <Plasma/Package>
-#include <Plasma/PackageMetadata>
 
-static const char description[] = I18N_NOOP("Install, list, remove Amarok applets");
+static const char description[] = "Install, list, remove Amarok applets";
 static const char version[] = "0.1";
 
 
@@ -73,69 +74,78 @@ void listPackages(const QString& type)
 
 int main(int argc, char **argv)
 {
-    K4AboutData aboutData("amarokpkg", 0, ki18n("Amarok Applet Manager"),
-                         version, ki18n(description), K4AboutData::License_GPL,
-                         ki18n("(C) 2008, Aaron Seigo, (C) 2009, Leo Franchi"));
-    aboutData.addAuthor( ki18n("Aaron Seigo"),
-                         ki18n("Original author"),
+    KAboutData aboutData("amarokpkg", i18n("Amarok Applet Manager"),
+                         version, i18n(description), KAboutLicense::GPL,
+                         i18n("(C) 2008, Aaron Seigo, (C) 2009, Leo Franchi"));
+    aboutData.addAuthor( i18n("Aaron Seigo"),
+                         i18n("Original author"),
                         "aseigo@kde.org" );
-    aboutData.addAuthor( ki18n( "Leo Franchi" ),
-                         ki18n( "Developer" ) ,
+    aboutData.addAuthor( i18n( "Leo Franchi" ),
+                         i18n( "Developer" ) ,
                          "lfranchi@kde.org"  );
 
-    KComponentData componentData(aboutData);
-
-    KCmdLineArgs::init( argc, argv, &aboutData );
-
-    KCmdLineOptions options;
-    options.add("g");
-    options.add("global", ki18n("For install or remove, operates on applets installed for all users."));
-    options.add("s");
-    options.add("i");
-    options.add("install <path>", ki18nc("Do not translate <path>", "Install the applet at <path>"));
-    options.add("u");
-    options.add("upgrade <path>", ki18nc("Do not translate <path>", "Upgrade the applet at <path>"));
-    options.add("l");
-    options.add("list", ki18n("List installed applets"));
-    options.add("r");
-    options.add("remove <name>", ki18nc("Do not translate <name>", "Remove the applet named <name>"));
-    options.add("p");
-    options.add("packageroot <path>", ki18n("Absolute path to the package root. If not supplied, then the standard data directories for this KDE session will be searched instead."));
-    KCmdLineArgs::addCmdLineOptions( options );
-
-    KApplication app;
-
-    KCmdLineArgs *args = KCmdLineArgs::parsedArgs();
+    QApplication app(argc, argv);
+    app.setApplicationName("amarokpkg");
+    app.setOrganizationDomain("kde.org");
+    app.setApplicationDisplayName(i18n("Amarok Applet Manager"));
+    app.setApplicationVersion(version);
+
+    /**
+     * @TODO: DO WE NEED THIS ?
+     */
+    KAboutData::setApplicationData(aboutData);
+
+    QCommandLineParser parser;
+
+    parser.addVersionOption();
+    parser.addHelpOption();
+    aboutData.setupCommandLine(&parser);
+    parser.process(app);
+    aboutData.processCommandLine(&parser);
+
+    parser.addOption(QCommandLineOption(QStringList() << "g" << "global",
+                                        i18n("For install or remove, operates on applets installed for all users.")));
+    parser.addOption(QCommandLineOption(QStringList() << "s" << "i" << "install <path>",
+                                        i18nc("Do not translate <path>", "Install the applet at <path>")));
+    parser.addOption(QCommandLineOption(QStringList() << "u" << "upgrade <path>",
+                                        i18nc("Do not translate <path>", "Upgrade the applet at <path>")));
+    parser.addOption(QCommandLineOption(QStringList() << "l" << "list",
+                                        i18n("Most installed applets")));
+    parser.addOption(QCommandLineOption(QStringList() << "r" << "remove <name>",
+                                        i18nc("Do not translate <name>", "Remove the applet named <name>")));
+    parser.addOption(QCommandLineOption(QStringList() << "p" << "packageroot <path>",
+                                        i18n("Absolute path to the package root. If not supplied, then the standard data directories for this KDE session will be searched instead.")));
+
     QString packageRoot = "plasma/plasmoids/";
     QString servicePrefix = "amarok-applet-";
     QString pluginType = "Applet";
-    Plasma::PackageStructure *installer = 0;
+    KPackage::Package *installer = 0;
 
-    if (args->isSet("list")) {
+    if (parser.isSet("list")) {
         listPackages(pluginType);
     } else {
         // install, remove or upgrade
         if (!installer) {
-            installer = new Plasma::PackageStructure();
-            installer->setServicePrefix(servicePrefix);
+            installer = new KPackage::Package();
+            installer->setServicePrefixPaths(servicePrefix);
         }
 
-        if (args->isSet("packageroot")) {
-            packageRoot = args->getOption("packageroot");
-        } else if (args->isSet("global")) {
-            packageRoot = KStandardDirs::locate("data", packageRoot);
+        if (parser.isSet("packageroot")) {
+            packageRoot = parser.value("packageroot");
+        } else if (parser.isSet("global")) {
+            packageRoot = QStandardPaths::locate(QStandardPaths::GenericDataLocation, packageRoot);
         } else {
             packageRoot = KStandardDirs::locateLocal("data", packageRoot);
         }
 
         QString package;
         QString packageFile;
-        if (args->isSet("remove")) {
-            package = args->getOption("remove");
-        } else if (args->isSet("upgrade")) {
-            package = args->getOption("upgrade");
-        } else if (args->isSet("install")) {
-            package = args->getOption("install");
+        if (parser.isSet("remove")) {
+            package = parser.value("remove");
+        } else if (parser.isSet("upgrade")) {
+            package = parser.value("upgrade");
+        } else if (parser.isSet("install")) {
+            package = parser.value("install");
         }
         if (!QDir::isAbsolutePath(package)) {
             packageFile = QDir(QDir::currentPath() + '/' + package).absolutePath();
@@ -143,24 +153,24 @@ int main(int argc, char **argv)
             packageFile = package;
         }
 
-        if (args->isSet("remove") || args->isSet("upgrade")) {
+        if (parser.isSet("remove") || parser.isSet("upgrade")) {
             installer->setPath(packageFile);
-            Plasma::PackageMetadata metadata = installer->metadata();
+            KPluginMetaData metadata = installer->metadata();
 
             QString pluginName;
-            if (metadata.pluginName().isEmpty()) {
+            if (metadata.name().isEmpty()) {
                 // plugin name given in command line
                 pluginName = package;
             } else {
                 // Parameter was a plasma package, get plugin name from the package
-                pluginName = metadata.pluginName();
+                pluginName = metadata.name();
             }
 
             QStringList installed = packages(pluginType);
             if (installed.contains(pluginName)) {
-                if (installer->uninstallPackage(pluginName, packageRoot)) {
+                if (installer->uninstall(pluginName, packageRoot)) {
                     output(i18n("Successfully removed %1", pluginName));
-                } else if (!args->isSet("upgrade")) {
+                } else if (!parser.isSet("upgrade")) {
                     output(i18n("Removal of %1 failed.", pluginName));
                     delete installer;
                     return 1;
@@ -169,8 +179,8 @@ int main(int argc, char **argv)
                 output(i18n("Plugin %1 is not installed.", pluginName));
             }
         }
-        if (args->isSet("install") || args->isSet("upgrade")) {
-            if (installer->installPackage(packageFile, packageRoot)) {
+        if (parser.isSet("install") || parser.isSet("upgrade")) {
+            if (installer->install(packageFile, packageRoot)) {
                 output(i18n("Successfully installed %1", packageFile));
                 runKbuildsycoca();
             } else {
@@ -179,8 +189,10 @@ int main(int argc, char **argv)
                 return 1;
             }
         }
+
         if (package.isEmpty()) {
-            KCmdLineArgs::usageError(i18nc("No option was given, this is the error message telling the user he needs at least one, do not translate install, remove, upgrade nor list", "One of install, remove, upgrade or list is required."));
+            QTextStream out(stdout);
+            out << i18nc("No option was given, this is the error message telling the user he needs at least one, do not translate install, remove, upgrade nor list", "One of install, remove, upgrade or list is required.");
         } else {
             runKbuildsycoca();
         }
diff --git a/src/services/lastfm/meta/LastFmMeta.cpp b/src/services/lastfm/meta/LastFmMeta.cpp
index 46aa8fe..1eaa2bc 100644
--- a/src/services/lastfm/meta/LastFmMeta.cpp
+++ b/src/services/lastfm/meta/LastFmMeta.cpp
@@ -445,4 +445,4 @@ QString LastFm::Track::scalableEmblem()
         return QString();
 }
 
-#include "LastFmMeta_p.moc"
+#include "moc_LastFmMeta_p.cpp"
diff --git a/tests/TestExpression.h b/tests/TestExpression.h
index cfa2a0c..3d4695f 100644
--- a/tests/TestExpression.h
+++ b/tests/TestExpression.h
@@ -21,6 +21,7 @@
 #define TESTEXPRESSION_H
 
 #include <QStringList>
+#include <QObject>
 
 class TestExpression : public QObject
 {
diff --git a/tests/TestQStringx.h b/tests/TestQStringx.h
index 8cf14c3..45c129d 100644
--- a/tests/TestQStringx.h
+++ b/tests/TestQStringx.h
@@ -23,6 +23,7 @@
 #include "QStringx.h"
 
 #include <QStringList>
+#include <QObject>
 
 class TestQStringx : public QObject
 {
diff --git a/tests/TestSmartPointerList.h b/tests/TestSmartPointerList.h
index 72c95aa..83ddb84 100644
--- a/tests/TestSmartPointerList.h
+++ b/tests/TestSmartPointerList.h
@@ -21,6 +21,7 @@
 #define TESTSMARTPOINTERLIST_H
 
 #include <QStringList>
+#include <QObject>
 
 class TestSmartPointerList : public QObject
 {
diff --git a/tests/TestSmartPointerList.cpp b/tests/TestSmartPointerList.cpp
index 8e9865b..d2f14c5 100644
--- a/tests/TestSmartPointerList.cpp
+++ b/tests/TestSmartPointerList.cpp
@@ -21,6 +21,7 @@
 
 #include "core/support/SmartPointerList.h"
 
+#include <QObject>
 #include <QTest>
 #include <QTimer>
 
